{"version":3,"file":"main.iframe.bundle.js","sources":["webpack:///./.storybook/preview.js","webpack:///./.storybook/preview.js-generated-config-entry.js","webpack:///./generated-stories-entry.js","webpack:///\\.)(?43a0","webpack:///\\.)(","webpack:///./src/components/Button/button.component.tsx","webpack:///./src/components/Button/button.stories.mdx","webpack:///./src/components/Button/button.style.ts","webpack:///./src/components/FullBackgroundImage/full-background-image.component.tsx","webpack:///./src/components/FullBackgroundImage/full-background-image.stories.mdx","webpack:///./src/components/FullBackgroundImage/full-background-image.style.ts","webpack:///./src/components/IntroContent/intro-content.component.tsx","webpack:///./src/components/IntroContent/intro-content.stories.mdx","webpack:///./src/components/IntroContent/intro-content.style.ts","webpack:///./storybook-init-framework-entry.js","webpack:///./util.inspect (ignored)"],"sourcesContent":["export const parameters = {\n  actions: { argTypesRegex: \"^on[A-Z].*\" },\n  controls: {\n    matchers: {\n      color: /(background|color)$/i,\n      date: /Date$/,\n    },\n  },\n}","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable import/no-unresolved */\nimport { addDecorator, addParameters, addLoader, addArgs, addArgTypes, addArgsEnhancer, addArgTypesEnhancer, setGlobalRender } from '/Users/jfrap/Desktop/projects/daniellefrappier18.github.io/new/daniellefrappier-app/node_modules/@storybook/client-api';\nimport * as config from '/Users/jfrap/Desktop/projects/daniellefrappier18.github.io/new/daniellefrappier-app/.storybook/preview.js';\nObject.keys(config).forEach(function (key) {\n  var value = config[key];\n\n  switch (key) {\n    case 'args':\n      {\n        return addArgs(value);\n      }\n\n    case 'argTypes':\n      {\n        return addArgTypes(value);\n      }\n\n    case 'decorators':\n      {\n        return value.forEach(function (decorator) {\n          return addDecorator(decorator, false);\n        });\n      }\n\n    case 'loaders':\n      {\n        return value.forEach(function (loader) {\n          return addLoader(loader, false);\n        });\n      }\n\n    case 'parameters':\n      {\n        return addParameters(_objectSpread({}, value), false);\n      }\n\n    case 'argTypesEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgTypesEnhancer(enhancer);\n        });\n      }\n\n    case 'argsEnhancers':\n      {\n        return value.forEach(function (enhancer) {\n          return addArgsEnhancer(enhancer);\n        });\n      }\n\n    case 'render':\n      {\n        return setGlobalRender(value);\n      }\n\n    case 'globals':\n    case 'globalTypes':\n      {\n        var v = {};\n        v[key] = value;\n        return addParameters(v, false);\n      }\n\n    case '__namedExportsOrder':\n    case 'decorateStory':\n    case 'renderToDOM':\n      {\n        return null; // This key is not handled directly in v6 mode.\n      }\n\n    default:\n      {\n        // eslint-disable-next-line prefer-template\n        return console.log(key + ' was not supported :( !');\n      }\n  }\n});","\"use strict\";\n\nvar _frameworkImportPath = require(\"@storybook/react\");\n\n/* eslint-disable import/no-unresolved */\n(0, _frameworkImportPath.configure)([require.context('./src', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.mdx)$/),require.context('./src', true, /^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.(js|jsx|ts|tsx))$/)], module, false);","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./src sync recursive ^\\\\.(?:(?:^|\\\\/|(?:(?:(?!(?:^|\\\\/)\\\\.).)*?)\\\\/)(?!\\\\.)(?=.)[^/]*?\\\\.stories\\\\.(js|jsx|ts|tsx))$\";","var map = {\n\t\"./components/Button/button.stories.mdx\": \"./src/components/Button/button.stories.mdx\",\n\t\"./components/FullBackgroundImage/full-background-image.stories.mdx\": \"./src/components/FullBackgroundImage/full-background-image.stories.mdx\",\n\t\"./components/IntroContent/intro-content.stories.mdx\": \"./src/components/IntroContent/intro-content.stories.mdx\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive ^\\\\.(?:(?:^|\\\\/|(?:(?:(?!(?:^|\\\\/)\\\\.).)*?)\\\\/)(?!\\\\.)(?=.)[^/]*?\\\\.stories\\\\.mdx)$\";","import React from 'react';\nimport { ButtonComponent } from './button.style';\nimport { ButtonProps } from './button.props';\n\nexport const Button = ( {\n    buttonType=\"primary\",\n    href,\n    isFullWidth = false,\n    children,\n    ...restProps\n}: ButtonProps) => {\n    return (\n        <ButtonComponent as={href ? 'a' : 'button'} href={href} role={href ? undefined : 'button'} buttonType={buttonType} isFullWidth={isFullWidth} {...restProps}>{children}</ButtonComponent>\n    );\n};","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Button } from './button.component';\nimport { Meta, Story, Canvas } from '@storybook/addon-docs/blocks';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title='Components/Button' component={Button} mdxType=\"Meta\" />\n    <h1>{`Button`}</h1>\n    <p>{`Used for Button stuff`}</p>\n    <Canvas mdxType=\"Canvas\">\n  <Story name='Details' args={{\n        buttonType: 'primary',\n        href: '/'\n      }} mdxType=\"Story\">\n    {args => <Button {...args} mdxType=\"Button\">\n        Test\n      </Button>}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const details = (args => <Button {...args}>\n        Test\n      </Button>);\ndetails.storyName = 'Details';\ndetails.args = {\n  buttonType: 'primary',\n  href: '/'\n};\ndetails.parameters = { storySource: { source: 'args => <Button {...args}>\\n        Test\\n      </Button>' } };\n\nconst componentMeta = { title: 'Components/Button', component: Button, includeStories: [\"details\"],  };\n\nconst mdxStoryNameToKey = {\"Details\":\"details\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","import styled from 'styled-components';\n\nexport interface Props {\n    buttonType: 'primary' | 'secondary';\n    href?: string;\n    isFullWidth?: boolean;\n}\n\nexport const ButtonComponent = styled.button<Props>`\n    ${(props) =>\n        props.buttonType === 'primary' ? `border: 1px solid #F62459; color: #F62459;` : 'background: #F62459; color: #FFFFFF;'\n    };\n    font-size: 2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 30px 5px;\n    padding: 10px 30px;\n    transition: all 0.3s;\n\n    ${({ isFullWidth }) => isFullWidth && `width: 100%;`}\n\n    /* styles if href */\n    &, \n    &:hover,\n    &:visited,\n    &:focus {\n        ${(props) =>\n            props.href !== undefined && \n            `display: inline-flex; text-decoration: none; justify-content:center;`\n        };\n    }\n`;\n\n","import React from 'react';\nimport { \n    FullOverlay,\n    FullBackgroundImageComponent,\n } from './full-background-image.style';\n\nimport { FullBackgroundImageProps } from './full-background-image.props'\n\nexport const FullBackgroundImage = ( {\n    srcSet,\n    children,\n    ...restProps\n}: FullBackgroundImageProps) => {\n    return (\n        <>\n            <FullBackgroundImageComponent srcSet={srcSet} {...restProps}>{children}</FullBackgroundImageComponent>\n            <FullOverlay>s</FullOverlay>\n        </>\n\n    );\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { FullBackgroundImage } from './full-background-image.component';\nimport { Meta, Story, Canvas } from '@storybook/addon-docs/blocks';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title='Components/Full Background Image' component={FullBackgroundImage} mdxType=\"Meta\" />\n    <h1>{`Button`}</h1>\n    <p>{`Used for Button stuff`}</p>\n    <Canvas mdxType=\"Canvas\">\n  <Story name='Details' args={{\n        srcSet: 'https://www.daniellefrappier.com/images/danielle_frappier_bg.jpg'\n      }} mdxType=\"Story\">\n    {args => <FullBackgroundImage {...args} mdxType=\"FullBackgroundImage\">\n        Test\n      </FullBackgroundImage>}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const details = (args => <FullBackgroundImage {...args}>\n        Test\n      </FullBackgroundImage>);\ndetails.storyName = 'Details';\ndetails.args = {\n  srcSet: 'https://www.daniellefrappier.com/images/danielle_frappier_bg.jpg'\n};\ndetails.parameters = { storySource: { source: 'args => <FullBackgroundImage {...args}>\\n        Test\\n      </FullBackgroundImage>' } };\n\nconst componentMeta = { title: 'Components/Full Background Image', component: FullBackgroundImage, includeStories: [\"details\"],  };\n\nconst mdxStoryNameToKey = {\"Details\":\"details\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","import styled from 'styled-components';\n\nexport interface Props {\n    srcSet?: string;\n}\n\nexport const FullOverlay = styled.div `\n    width: 100%;\n    height: 100%;\n    opacity: 0.25;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: #1a1b23;\n`;\n\nexport const FullBackgroundImageComponent = styled.div<Props>`\n    background: url(${(props) => props.srcSet});\n    background-size: cover;\n    background-position: top; \n    height: 100%;\n\n    @media screen and (min-width: 960px) {\n        background-position: center; \n    }\n`;\n\n","import React from 'react';\nimport { \n    IntroContentWrapper\n } from './intro-content.style';\nimport { IntroContentProps } from './into-content.props'\n\nexport const IntroContent = ( {\n    children,\n    ...restProps\n}: IntroContentProps) => {\n    return (\n        <IntroContentWrapper {...restProps}>{children}</IntroContentWrapper>\n\n    );\n}\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { IntroContent } from './intro-content.component';\nimport { Meta, Story, Canvas } from '@storybook/addon-docs/blocks';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title='Components/Intro Content' component={IntroContent} mdxType=\"Meta\" />\n    <h1>{`Button`}</h1>\n    <p>{`Used for Button stuff`}</p>\n    <Canvas mdxType=\"Canvas\">\n  <Story name='Details' args={{}} mdxType=\"Story\">\n    {args => <IntroContent {...args} mdxType=\"IntroContent\">\n        <h1>Test</h1>\n      </IntroContent>}\n  </Story>\n    </Canvas>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n\nexport const details = (args => <IntroContent {...args}>\n        <h1>Test</h1>\n      </IntroContent>);\ndetails.storyName = 'Details';\ndetails.args = {};\ndetails.parameters = { storySource: { source: 'args => <IntroContent {...args}>\\n        <h1>Test</h1>\\n      </IntroContent>' } };\n\nconst componentMeta = { title: 'Components/Intro Content', component: IntroContent, includeStories: [\"details\"],  };\n\nconst mdxStoryNameToKey = {\"Details\":\"details\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","import styled from 'styled-components';\n\nexport const IntroContentWrapper = styled.div `\n    position: relative;\n    z-index: 10;\n    top: 50%;\n    opacity: 0.9;\n    transform: translateY(-50%);\n`;\n\n","import '@storybook/react';","/* (ignored) */"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AADA;AAFA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApEA;AAsEA;;;;;;;;;;;;;AClFA;AACA;AACA;AAEA;AACA;AACA;AADA;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;;AAGA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAVA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAGA;AAGA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AAHA;AAIA;AAAA;AAAA;AAAA;AAMA;AACA;AArBA;AAsBA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;;;;AAOA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;AAMA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAGA;AAGA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAFA;AAGA;AAAA;AAAA;AAAA;AAMA;AACA;AApBA;AAqBA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;AC3DA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;;AAKA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AARA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAGA;AAGA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AAlBA;AAmBA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}